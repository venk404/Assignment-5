version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  Api1:
    build:
      context: .
      dockerfile: Dockerfile
    image: restapi:v1.0.0
    depends_on:
      DB:
        condition: service_healthy
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      PORT: 8001
    ports:
      - "8001:8001"
    networks:
      - app-network

  Api2:
    image: restapi:v1.0.0
    depends_on:
      DB:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
      Api1:
        condition: service_healthy
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      PORT: 8002
    ports:
      - "8002:8002"
    networks:
      - app-network

  nginx:
    image: nginx:1.29.0
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      Api1:
        condition: service_healthy
      Api2:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 5s
      retries: 3

  migration:
    image: restapi:v1.0.0
    depends_on:
      DB:
        condition: service_healthy
    environment:
      PYWAY_TYPE: "postgres"
      PYWAY_TABLE: "pyway_schema_history"
      PYWAY_DATABASE_HOST: ${POSTGRES_HOST}
      PYWAY_DATABASE_NAME: ${POSTGRES_DB}
      PYWAY_DATABASE_USERNAME: ${POSTGRES_USER}
      PYWAY_DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      PYWAY_DATABASE_PORT: ${POSTGRES_PORT} 
      PYWAY_DATABASE_MIGRATION_DIR: "/app/migrations"
    command: >
      sh -c "
        pyway migrate
      "
    networks:
      - app-network
    restart: "no"

  DB:
    image: postgres:17.3
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres_data: